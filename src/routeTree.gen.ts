/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ContactsIndexImport } from './routes/contacts/index'
import { Route as ContactsIdImport } from './routes/contacts/$id'
import { Route as AboutNameImport } from './routes/about/$name'
import { Route as ContactsIdIndexImport } from './routes/contacts/$id/index'
import { Route as ContactsIdEditImport } from './routes/contacts/$id/edit'

// Create Virtual Routes

const AboutLazyImport = createFileRoute('/about')()
const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const AboutLazyRoute = AboutLazyImport.update({
  path: '/about',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/about.lazy').then((d) => d.Route))

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const ContactsIndexRoute = ContactsIndexImport.update({
  path: '/contacts/',
  getParentRoute: () => rootRoute,
} as any)

const ContactsIdRoute = ContactsIdImport.update({
  path: '/contacts/$id',
  getParentRoute: () => rootRoute,
} as any)

const AboutNameRoute = AboutNameImport.update({
  path: '/$name',
  getParentRoute: () => AboutLazyRoute,
} as any)

const ContactsIdIndexRoute = ContactsIdIndexImport.update({
  path: '/',
  getParentRoute: () => ContactsIdRoute,
} as any)

const ContactsIdEditRoute = ContactsIdEditImport.update({
  path: '/edit',
  getParentRoute: () => ContactsIdRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutLazyImport
      parentRoute: typeof rootRoute
    }
    '/about/$name': {
      id: '/about/$name'
      path: '/$name'
      fullPath: '/about/$name'
      preLoaderRoute: typeof AboutNameImport
      parentRoute: typeof AboutLazyImport
    }
    '/contacts/$id': {
      id: '/contacts/$id'
      path: '/contacts/$id'
      fullPath: '/contacts/$id'
      preLoaderRoute: typeof ContactsIdImport
      parentRoute: typeof rootRoute
    }
    '/contacts/': {
      id: '/contacts/'
      path: '/contacts'
      fullPath: '/contacts'
      preLoaderRoute: typeof ContactsIndexImport
      parentRoute: typeof rootRoute
    }
    '/contacts/$id/edit': {
      id: '/contacts/$id/edit'
      path: '/edit'
      fullPath: '/contacts/$id/edit'
      preLoaderRoute: typeof ContactsIdEditImport
      parentRoute: typeof ContactsIdImport
    }
    '/contacts/$id/': {
      id: '/contacts/$id/'
      path: '/'
      fullPath: '/contacts/$id/'
      preLoaderRoute: typeof ContactsIdIndexImport
      parentRoute: typeof ContactsIdImport
    }
  }
}

// Create and export the route tree

interface AboutLazyRouteChildren {
  AboutNameRoute: typeof AboutNameRoute
}

const AboutLazyRouteChildren: AboutLazyRouteChildren = {
  AboutNameRoute: AboutNameRoute,
}

const AboutLazyRouteWithChildren = AboutLazyRoute._addFileChildren(
  AboutLazyRouteChildren,
)

interface ContactsIdRouteChildren {
  ContactsIdEditRoute: typeof ContactsIdEditRoute
  ContactsIdIndexRoute: typeof ContactsIdIndexRoute
}

const ContactsIdRouteChildren: ContactsIdRouteChildren = {
  ContactsIdEditRoute: ContactsIdEditRoute,
  ContactsIdIndexRoute: ContactsIdIndexRoute,
}

const ContactsIdRouteWithChildren = ContactsIdRoute._addFileChildren(
  ContactsIdRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/about': typeof AboutLazyRouteWithChildren
  '/about/$name': typeof AboutNameRoute
  '/contacts/$id': typeof ContactsIdRouteWithChildren
  '/contacts': typeof ContactsIndexRoute
  '/contacts/$id/edit': typeof ContactsIdEditRoute
  '/contacts/$id/': typeof ContactsIdIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/about': typeof AboutLazyRouteWithChildren
  '/about/$name': typeof AboutNameRoute
  '/contacts': typeof ContactsIndexRoute
  '/contacts/$id/edit': typeof ContactsIdEditRoute
  '/contacts/$id': typeof ContactsIdIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/about': typeof AboutLazyRouteWithChildren
  '/about/$name': typeof AboutNameRoute
  '/contacts/$id': typeof ContactsIdRouteWithChildren
  '/contacts/': typeof ContactsIndexRoute
  '/contacts/$id/edit': typeof ContactsIdEditRoute
  '/contacts/$id/': typeof ContactsIdIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/about/$name'
    | '/contacts/$id'
    | '/contacts'
    | '/contacts/$id/edit'
    | '/contacts/$id/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/about/$name'
    | '/contacts'
    | '/contacts/$id/edit'
    | '/contacts/$id'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/about/$name'
    | '/contacts/$id'
    | '/contacts/'
    | '/contacts/$id/edit'
    | '/contacts/$id/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  AboutLazyRoute: typeof AboutLazyRouteWithChildren
  ContactsIdRoute: typeof ContactsIdRouteWithChildren
  ContactsIndexRoute: typeof ContactsIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  AboutLazyRoute: AboutLazyRouteWithChildren,
  ContactsIdRoute: ContactsIdRouteWithChildren,
  ContactsIndexRoute: ContactsIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/contacts/$id",
        "/contacts/"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/about": {
      "filePath": "about.lazy.tsx",
      "children": [
        "/about/$name"
      ]
    },
    "/about/$name": {
      "filePath": "about/$name.tsx",
      "parent": "/about"
    },
    "/contacts/$id": {
      "filePath": "contacts/$id.tsx",
      "children": [
        "/contacts/$id/edit",
        "/contacts/$id/"
      ]
    },
    "/contacts/": {
      "filePath": "contacts/index.tsx"
    },
    "/contacts/$id/edit": {
      "filePath": "contacts/$id/edit.tsx",
      "parent": "/contacts/$id"
    },
    "/contacts/$id/": {
      "filePath": "contacts/$id/index.tsx",
      "parent": "/contacts/$id"
    }
  }
}
ROUTE_MANIFEST_END */
